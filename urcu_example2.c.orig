/*
 * Copyright (C) 2013  Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 */

#include <inttypes.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include <urcu/urcu-mb.h> /* Memory barrier RCU flavor */

extern int flag;
extern char *data;
int read_into(char *buffer);

int try_access() {
  if (flag) {
    urcu_mb_read_unlock();
    return -1;
  }

  urcu_mb_read_lock();
  int tries = 3;
  while (!flag && !tries--)
    flag = read_into(data);

  if (flag) {
    urcu_mb_read_unlock();
    return -1;
  }

  return 0;
}

int main(void) {
  urcu_mb_register_thread();

  urcu_mb_read_lock();

  int ret = try_access();

  urcu_mb_read_unlock();

  urcu_mb_unregister_thread();
  return ret;
}
